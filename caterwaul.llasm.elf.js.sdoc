ELF generator | Spencer Tipping
Licensed under the terms of the MIT source code license

Introduction.
The ELF generator provides a higher-level interface to a low-level assembler and produces an ELF image from a series of assembled functions and data elements. This ELF can then be linked to
produce a final executable image.

Most ELF features aren't supported. Rather, this library just creates a symbol table, a machine code section, and generates a relocation table to link any unbound symbols (which are specified
by inserting strings into the array of bytecode). Multi-byte numbers are expanded into multiple bytes, and they are assumed to be preformatted as little-endian numbers. The 'functions'
argument is assumed to be a hash mapping symbol names to arbitrarily-nested arrays of numbers and strings.

  caterwaul.tconfiguration('std seq', 'llasm.elf', function () {
    (this.llasm || this.shallow('llasm', {}).llasm) /se[_.elf = {} /se[
      _.ia32_linux = fn[functions][seq[~_.ia32_linux.elf_header + 
  });
