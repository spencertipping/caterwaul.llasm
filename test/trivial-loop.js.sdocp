sdocp('test/trivial-loop.js.sdoc', 'Trivial loop on ECX test.\nImplements this logic:\n\n| xorl %ebx, %ebx\n  movl $1, %eax\n  movl $10, %ecx\n  .top:\n    addl %ecx, %ebx\n    dec %ecx\n    test %ecx, %ecx\n    ja .top\n  int $0x80\n\ncaterwaul.clone(\'std seq llasm.numerics llasm.elf llasm.asm\')(function (require) {\n  var mc1 = caterwaul.llasm.asm(qas[x31 /b11_011011, xb001_b10a |+top, x01 /b11_001011 | xff /b11_001001\n                                                                     | x85 /b11_001001 | x77 /top[1].r8, xcd80]);\n\n  var bytes = caterwaul.llasm.elf32.trivial_code(mc1);\n  require(\'fs\') /se.fs[\n    fs.writeFile(\'test/return-55\', new Buffer(bytes.length) /se.bs[seq[bytes *![bs[_i] = _]]], fn_[fs.chmodSync(\'test/return-55\', 0700)])];\n})(require);\n');